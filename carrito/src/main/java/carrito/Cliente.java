
package carrito;
import java.util.*;
import java.io.*;
import java.net.*;
import java.nio.file.Files;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;

public class Cliente extends javax.swing.JFrame {

    Ticket abrir = new Ticket();
    String host = "192.168.1.74";
    int pto = 1234;
    int cont = 0;
    float total = 0;
    int max = 5;
    ArrayList<String> compra = new ArrayList<String>();
    ArrayList<Integer> id = new ArrayList<Integer>();
    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
        String nom = "";
        int exist = 0;
        float precio = 0;
        String desc = "";
        String nombreimg = "";
        String send = String.valueOf(cont);
        
        try{
            DatagramSocket s = new DatagramSocket();
            long tam = 0, recibidos = -1;
            int cont = 0;
            
            InetAddress dst = null;
            try{
                dst = InetAddress.getByName(host);
            }catch(UnknownHostException u){
                u.printStackTrace();
            }
            
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(baos);
            oos.writeObject(send);
            oos.flush();
            byte [] bNum = baos.toByteArray();
            //byte [] bNum = send.getBytes();
            DatagramPacket pNum = new DatagramPacket(bNum,bNum.length,dst,pto);
            s.send(pNum);
            s.close();
            DatagramSocket cl = new DatagramSocket(9090);
            
            while(recibidos < tam)
            {
                DatagramPacket p = new DatagramPacket(new byte[60000],60000);
                cl.receive(p);
                ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(p.getData()));
                Object o = ois.readObject();
                
                if(o instanceof Datos)
                {
                    Datos d = (Datos)o;
                    recibidos += d.num;
                    FileOutputStream fos = new FileOutputStream("tmp/"+d.sec+".txt");
                    fos.write(d.b, 0, d.num);
                    fos.close();
                    cont++;
                }
                else if(o instanceof DatosImg){
                    DatosImg dimg = (DatosImg)o;
                    nombreimg = dimg.nombre;
                    tam = dimg.tam;
                    recibidos++;
                }
                else if(o instanceof DatosP){
                    DatosP dProd = (DatosP)o;
                    nom = dProd.nombre;
                    desc = dProd.descripcion;
                    exist = dProd.existencias;
                    precio = dProd.precio;
                }
            }
            cl.close();
            
            FileOutputStream fos = new FileOutputStream("imgCliente/"+nombreimg);
            byte [] buffer = new byte[60000];
            int n;
            for(int i=0;i<cont;i++)
            {
                File temp = new File("tmp/"+i+".txt");
                FileInputStream fis = new FileInputStream(temp);
                while((n=fis.read(buffer))!=-1)
                    fos.write(buffer, 0, n);
                fis.close();
                Files.delete(temp.toPath());
            }
            fos.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        TextNom.setText(nom);
        TextExist.setText(String.valueOf(exist));
        TextPrecio.setText(String.valueOf(precio));
        ImageIcon jugar = new ImageIcon("imgCliente/"+nombreimg);
        Icon imagen = new ImageIcon(jugar.getImage().getScaledInstance(TextImg.getWidth(),TextImg.getHeight(),Image.SCALE_DEFAULT));
        TextImg.setIcon(imagen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TextImg = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        TextNom = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TextTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextExist = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TextPrecio = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));

        TextImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setText(">>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 255, 255));
        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setText("Agregar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 204, 204));
        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        TextNom.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        TextNom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TextNom.setText("Nombre");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Total:");

        TextTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        TextTotal.setText("0.00");

        jLabel2.setText("Existencias:");

        TextExist.setText("NumExis");

        jLabel3.setText("Precio:");

        TextPrecio.setText("Costo");

        jButton5.setBackground(new java.awt.Color(204, 255, 204));
        jButton5.setText("Confirmar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Product");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TextPrecio))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TextTotal)))
                                .addGap(85, 85, 85))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TextNom, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(27, 27, 27)))
                                .addComponent(TextImg, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel2)
                                .addGap(1, 1, 1)
                                .addComponent(TextExist)))
                        .addContainerGap(56, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(TextNom, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(TextImg, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(130, 130, 130)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextExist)
                    .addComponent(jLabel3)
                    .addComponent(TextPrecio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(TextTotal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String nom = "";
        int exist = 0;
        float precio = 0;
        String desc = "";
        String nombreimg = "";
        if(cont == 0){
            cont = 4;            
        }
        else
            cont--;
        String send = String.valueOf(cont);
        
        try{
            DatagramSocket s = new DatagramSocket();
            long tam = 0, recibidos = -1;
            int cont = 0;
            
            InetAddress dst = null;
            try{
                dst = InetAddress.getByName(host);
            }catch(UnknownHostException u){
                u.printStackTrace();
            }
            
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(baos);
            oos.writeObject(send);
            oos.flush();
            byte [] bNum = baos.toByteArray();
            //byte [] bNum = send.getBytes();
            DatagramPacket pNum = new DatagramPacket(bNum,bNum.length,dst,pto);
            s.send(pNum);
            s.close();
            DatagramSocket cl = new DatagramSocket(9090);
            
            while(recibidos < tam)
            {
                DatagramPacket p = new DatagramPacket(new byte[60000],60000);
                cl.receive(p);
                ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(p.getData()));
                Object o = ois.readObject();
                
                if(o instanceof Datos)
                {
                    Datos d = (Datos)o;
                    recibidos += d.num;
                    FileOutputStream fos = new FileOutputStream("tmp/"+d.sec+".txt");
                    fos.write(d.b, 0, d.num);
                    fos.close();
                    cont++;
                }
                else if(o instanceof DatosImg){
                    DatosImg dimg = (DatosImg)o;
                    nombreimg = dimg.nombre;
                    tam = dimg.tam;
                    recibidos++;
                }
                else if(o instanceof DatosP){
                    DatosP dProd = (DatosP)o;
                    nom = dProd.nombre;
                    desc = dProd.descripcion;
                    exist = dProd.existencias;
                    precio = dProd.precio;
                }
            }
            cl.close();
            
            FileOutputStream fos = new FileOutputStream("imgCliente/"+nombreimg);
            byte [] buffer = new byte[60000];
            int n;
            for(int i=0;i<cont;i++)
            {
                File temp = new File("tmp/"+i+".txt");
                FileInputStream fis = new FileInputStream(temp);
                while((n=fis.read(buffer))!=-1)
                    fos.write(buffer, 0, n);
                fis.close();
                Files.delete(temp.toPath());
            }
            fos.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        
        TextNom.setText(nom);
        //TextDesc.setText(compra.toString());
        TextExist.setText(String.valueOf(exist));
        TextPrecio.setText(String.valueOf(precio));
        ImageIcon jugar = new ImageIcon("imgCliente/"+nombreimg);
        Icon imagen = new ImageIcon(jugar.getImage().getScaledInstance(TextImg.getWidth(),TextImg.getHeight(),Image.SCALE_DEFAULT));
        TextImg.setIcon(imagen);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setVisible(false);
        this.dispose();
        abrir.setVisible(false);
        abrir.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nom = "";
        int exist = 0;
        float precio = 0;
        String desc = "";
        String nombreimg = "";
        if(cont == 4)
            cont = 0;
        else
            cont++;
        String send = String.valueOf(cont);
        
        try{
            DatagramSocket s = new DatagramSocket();
            long tam = 0, recibidos = -1;
            int cont = 0;
            
            InetAddress dst = null;
            try{
                dst = InetAddress.getByName(host);
            }catch(UnknownHostException u){
                u.printStackTrace();
            }
            
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(baos);
            oos.writeObject(send);
            oos.flush();
            byte [] bNum = baos.toByteArray();
            //byte [] bNum = send.getBytes();
            DatagramPacket pNum = new DatagramPacket(bNum,bNum.length,dst,pto);
            s.send(pNum);
            s.close();
            DatagramSocket cl = new DatagramSocket(9090);
            
            while(recibidos < tam)
            {
                DatagramPacket p = new DatagramPacket(new byte[60000],60000);
                cl.receive(p);
                ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(p.getData()));
                Object o = ois.readObject();
                
                if(o instanceof Datos)
                {
                    Datos d = (Datos)o;
                    recibidos += d.num;
                    FileOutputStream fos = new FileOutputStream("tmp/"+d.sec+".txt");
                    fos.write(d.b, 0, d.num);
                    fos.close();
                    cont++;
                }
                else if(o instanceof DatosImg){
                    DatosImg dimg = (DatosImg)o;
                    nombreimg = dimg.nombre;
                    tam = dimg.tam;
                    recibidos++;
                }
                else if(o instanceof DatosP){
                    DatosP dProd = (DatosP)o;
                    nom = dProd.nombre;
                    desc = dProd.descripcion;
                    exist = dProd.existencias;
                    precio = dProd.precio;
                }
            }
            cl.close();
            
            FileOutputStream fos = new FileOutputStream("imgCliente/"+nombreimg);
            byte [] buffer = new byte[60000];
            int n;
            for(int i=0;i<cont;i++)
            {
                File temp = new File("tmp/"+i+".txt");
                FileInputStream fis = new FileInputStream(temp);
                while((n=fis.read(buffer))!=-1)
                    fos.write(buffer, 0, n);
                fis.close();
                Files.delete(temp.toPath());
            }
            fos.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        
        jLabel4.setText(desc);
        TextNom.setText(nom);
        TextExist.setText(String.valueOf(exist));
        TextPrecio.setText(String.valueOf(precio));
        ImageIcon jugar = new ImageIcon("imgCliente/"+nombreimg);
        Icon imagen = new ImageIcon(jugar.getImage().getScaledInstance(TextImg.getWidth(),TextImg.getHeight(),Image.SCALE_DEFAULT));
        TextImg.setIcon(imagen);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String infocompra = TextNom.getText()+"\tPrecio: "+TextPrecio.getText()+"\n";
        compra.add(infocompra);
        total = total + Float.parseFloat(TextPrecio.getText());
        TextTotal.setText(String.valueOf(total));
        id.add(cont);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            abrir.setDatos(compra, total, this, id);
        } catch (IOException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        abrir.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed


    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TextExist;
    private javax.swing.JLabel TextImg;
    private javax.swing.JLabel TextNom;
    private javax.swing.JLabel TextPrecio;
    private javax.swing.JLabel TextTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
